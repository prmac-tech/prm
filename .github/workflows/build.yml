name: Build

on:
  workflow_dispatch:

env:
  push: ${{ (github.ref_name == 'main') }}

jobs:
  build-gradle:
    name: Gradle build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        project:
          - rest-service
    outputs:
      version: ${{ steps.version.outputs.version }}
      changes: ${{ steps.check-changes.outputs.changes }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - uses: gradle/actions/setup-gradle@v4

      - name: Set version
        id: version
        run: |
          version=$(date '+%Y-%m-%d').${{ github.run_number }}.$(echo ${{ github.sha }} | cut -c1-7)
          echo "ORG_GRADLE_PROJECT_version=$version" | tee -a "$GITHUB_ENV"
          echo "version=$version" | tee -a "$GITHUB_OUTPUT"

      - name: Build and test
        run: ./gradlew ${{ matrix.project }}:check

      - name: Push images
        if: env.push == 'true'
        run: ./gradlew ${{ matrix.project }}:jib
        env:
          GITHUB_USERNAME: prmac-tech
          GITHUB_PASSWORD: ${{ secrets.GHCR_SECRET }}

      - name: Check changes
        id: check-changes
        run: echo "changes=$(find changed -mindepth 1 -maxdepth 1 -printf "%f\n" | jq -R . | jq -s -c '. // []')" | tee -a "$GITHUB_OUTPUT"

      - name: Output changes
        run: echo '${{ steps.check-changes.outputs.changes }}' > ${{ matrix.project }}-changes.json

      - name: Store changes
        uses: actions/upload-artifact@v4
        with:
          name: changes-${{ matrix.project }}
          path: ${{ matrix.project }}-changes.json

      - uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.project }}
          path: |
            **/build/jacoco
            **/build/reports/jacoco/**/*.xml
            **/build/test-results